{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","value","setValue","onSubmit","e","preventDefault","length","cats","type","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","response","json","data","gifs","map","image","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","img","key","GifExpertApp","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"6MAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAMK,OAAS,IACfP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAeM,OACjCL,EAAS,OAMT,2BAAOM,KAAK,OAAOP,MAAOA,EAAOQ,SAdf,SAACL,GACvBF,EAASE,EAAEM,OAAOT,YCNbU,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACC,mCACdN,EAFa,sDACC,mCADD,cAEyDO,UAAUF,GAFnE,qBAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAU,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAMC,GACVhB,MAAOe,EAAMf,MACbC,IAAG,UAAEc,EAAME,cAAR,aAAE,EAAcC,iBAAiBjB,QATzB,kBAaZY,GAbY,4CAAH,sDCGPM,EAAU,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EACblB,mBAAS,CAC/BwB,KAAM,GACNQ,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OAPAC,qBAAU,WACNlB,EAAQC,GAAWkB,MAAK,SAAAP,GAAM,OAAIK,EAAS,CACvCV,KAAMK,EACNG,SAAS,SAEd,CAACd,IAEGe,EDV0BI,CAAanB,GAAjCW,EAFyB,EAE9BL,KAAaQ,EAFiB,EAEjBA,QAErB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAW,uBAAGlB,UAAU,oCAAb,aACZ,yBAAKA,UAAU,aAEPe,EAAOH,KAAI,SAAAY,GAAG,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIV,IAAQU,UEavCE,EAxBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,iBAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ0C,EAAWf,KAAI,SAAAgB,GAAC,OACZ,kBAAC,EAAD,CACIH,IAAKG,EACLxB,UAAWwB,UCbvCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.80ab0d43.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (value.length > 2) {\r\n            setCategorias(cats => [value, ...cats]);\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={value} onChange={handleInputChange} />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (categoria) => {\r\n    const giphyApiKey = 'y39yJY0U3j96pcpu028XWPFjhCDVCBn1';\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=${giphyApiKey}&q=${encodeURI(categoria)}&limit=3`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(image => {\r\n        return {\r\n            id: image.id,\r\n            title: image.title,\r\n            url: image.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading..</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then(images => setstate({\r\n            data: images,\r\n            loading: false\r\n        }));\r\n    }, [categoria]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Walter White']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(c => (\r\n                        <GifGrid\r\n                            key={c}\r\n                            categoria={c}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}